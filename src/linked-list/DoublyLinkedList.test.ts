import { DoublyLinkedList } from './DoublyLinkedList'

describe('DoubleLinkedList tests', () => {
  it('add', () => {
    const doubleLinkedList = new DoublyLinkedList()
    doubleLinkedList.add(1)
    doubleLinkedList.add(2)
    doubleLinkedList.add(3)
    expect(Array.from(doubleLinkedList.values())).toMatchObject([1, 2, 3])
  })
  it('addAt', () => {
    const doubleLinkedList = new DoublyLinkedList()
    doubleLinkedList.add(1)
    doubleLinkedList.addAt(1, 2)
    expect(Array.from(doubleLinkedList.values())).toMatchObject([1, 2])
    doubleLinkedList.addAt(1, 3)
    expect(Array.from(doubleLinkedList.values())).toMatchObject([1, 3, 2])
    doubleLinkedList.addAt(3, 4)
    expect(Array.from(doubleLinkedList.values())).toMatchObject([1, 3, 2, 4])
    doubleLinkedList.addAt(100, 100)
    expect(Array.from(doubleLinkedList.values())).toMatchObject([1, 3, 2, 4])
  })
  it('remove', () => {
    const doubleLinkedList = new DoublyLinkedList()
    doubleLinkedList.add(1)
    doubleLinkedList.add(2)
    doubleLinkedList.remove(1)
    expect(Array.from(doubleLinkedList.values())).toMatchObject([2])
    doubleLinkedList.add(3)
    doubleLinkedList.add(4)
    expect(Array.from(doubleLinkedList.values())).toMatchObject([2, 3, 4])
    doubleLinkedList.remove(2)
    expect(Array.from(doubleLinkedList.values())).toMatchObject([3, 4])
    doubleLinkedList.remove(4)
    expect(Array.from(doubleLinkedList.values())).toMatchObject([3])
    doubleLinkedList.remove(4)
    expect(Array.from(doubleLinkedList.values())).toMatchObject([3])
    doubleLinkedList.remove(3)
    expect(Array.from(doubleLinkedList.values())).toMatchObject([])
  })
})
